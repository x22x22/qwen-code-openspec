# Diff for packages/core/src/core/nonInteractiveToolExecutor.ts
diff --git a/packages/core/src/core/nonInteractiveToolExecutor.ts b/packages/core/src/core/nonInteractiveToolExecutor.ts
index 67407230..48dc0189 100644
--- a/packages/core/src/core/nonInteractiveToolExecutor.ts
+++ b/packages/core/src/core/nonInteractiveToolExecutor.ts
@@ -9,7 +9,18 @@ import type {
   ToolCallResponseInfo,
   Config,
 } from '../index.js';
-import { CoreToolScheduler } from './coreToolScheduler.js';
+import {
+  CoreToolScheduler,
+  type AllToolCallsCompleteHandler,
+  type OutputUpdateHandler,
+  type ToolCallsUpdateHandler,
+} from './coreToolScheduler.js';
+
+export interface ExecuteToolCallOptions {
+  outputUpdateHandler?: OutputUpdateHandler;
+  onAllToolCallsComplete?: AllToolCallsCompleteHandler;
+  onToolCallsUpdate?: ToolCallsUpdateHandler;
+}
 
 /**
  * Executes a single tool call non-interactively by leveraging the CoreToolScheduler.
@@ -18,13 +29,19 @@ export async function executeToolCall(
   config: Config,
   toolCallRequest: ToolCallRequestInfo,
   abortSignal: AbortSignal,
+  options: ExecuteToolCallOptions = {},
 ): Promise<ToolCallResponseInfo> {
   return new Promise<ToolCallResponseInfo>((resolve, reject) => {
     new CoreToolScheduler({
       config,
+      outputUpdateHandler: options.outputUpdateHandler,
+      onToolCallsUpdate: options.onToolCallsUpdate,
       getPreferredEditor: () => undefined,
       onEditorClose: () => {},
       onAllToolCallsComplete: async (completedToolCalls) => {
+        if (options.onAllToolCallsComplete) {
+          await options.onAllToolCallsComplete(completedToolCalls);
+        }
         resolve(completedToolCalls[0].response);
       },
     })
